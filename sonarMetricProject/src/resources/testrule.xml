<rules>
	<rule>
		<key>locTooHigh</key>
		<name>Loc Too High</name>
		<description>
			Loc Too High
		</description>
		<severity>MAJOR</severity>
		<type>CODE_SMELL</type>
		<scope>2</scope>
		<disharmonyDetection>
			<metric name="loc" compare="&gt;" value="25" modifier="/2" />
		</disharmonyDetection>
	</rule>
	<rule>
		<key>ClassLocTooHigh</key>
		<name>Class Loc Too High</name>
		<description>
			Class Loc Too High
		</description>
		<severity>MAJOR</severity>
		<type>CODE_SMELL</type>
		<scope>1</scope>
		<disharmonyDetection>
			<metric name="loc" compare="&gt;" value="50" modifier="/2" />
		</disharmonyDetection>
	</rule>
	<rule>
		<key>noavTooHigh</key>
		<name>Noav Too High</name>
		<description>
			Noav Too High
		</description>
		<severity>MAJOR</severity>
		<type>CODE_SMELL</type>
		<scope>2</scope>
		<disharmonyDetection>
			<metric name="noav" compare="&gt;" value="5" />
		</disharmonyDetection>
	</rule>
	<rule>
		<key>cycloTooHigh</key>
		<name>Cyclo Too High</name>
		<description>
			Cyclo Too High
		</description>
		<severity>MAJOR</severity>
		<type>CODE_SMELL</type>
		<scope>2</scope>
		<disharmonyDetection>
			<metric name="cyclo" compare="&gt;=" value="10" />
		</disharmonyDetection>
	</rule>
	<!-- Brain method detection using treshold semantics -->
	<rule>
		<key>brainMethodStatic</key>
		<name>BrainMethod (static values)</name>
		<description>
			Brain Methods tend to centralize the functionality of a
			class, in the same
			way as a God Class centralizes the functionality of
			an entire
			subsystem, or sometimes even a whole system.
		</description>
		<severity>MAJOR</severity>
		<type>CODE_SMELL</type>
		<scope>2</scope>
		<disharmonyDetection>
			<and>
				<metric name="loc_class" compare="&gt;" semantic="0.75" modifier="/2" />
				<metric name="noav" compare="&gt;" semantic="0.66" />
				<metric name="cyclo" compare="&gt;=" semantic="0.75" />
				<metric name="maxnesting" compare="&gt;=" semantic="0.33" />
			</and>
		</disharmonyDetection>
	</rule>
</rules>